#!/usr/bin/python
# vim: noet sw=4 ts=4

import	os
import	sys
import	string

class	BlkidPrettyPrint( object ):

	INDENT_WITH = '        '

	def __init__( self ):
		self._reset()
		return

	def	_reset( self ):
		self.lines = []
		self.max_name = 15
		return

	def	_process( self, f = sys.stdin ):
		for line in f:
			tokens = line.rstrip().split( ':', 1 )
			if len(tokens) != 2: continue
			self.max_name = max( self.max_name, len( tokens[0] ) )
			self.lines.append( (tokens[0], tokens[1].split()) )
		return

	def do_file( self, fn ):
		if not os.path.isfile( fn ): return
		f = open( fn, 'rt' )
		self._process( f )
		f.close()
		return

	def	do_dir( self, dn ):
		try:
			files = os.listdir( dn )
		except Exception, e:
			print >>sys.stderr, 'Cannot list directory "%s".' % dn
			raise e
		files.sort()
		for file in files:
			self.do_name( os.path.join( dn, file ) )
		return

	def	do_name( self, name ):
		if os.path.isfile( name ):
			self.do_file( name )
		elif os.path.isdir( name ):
			self.do_dir( name )
		else:
			# print >>sys.stderr, 'Ignoring "%s".' % name
			pass
		return

	def	finish( self ):
		self.lines.sort( key = lambda (n,a): string.lower(n) )
		fmt = '%%%ds : %%s' % self.max_name
		for (name, args) in self.lines:
			args.sort()
			print fmt % ( name, ' '.join(args) )
		return

if __name__ == '__main__':
	bpp = BlkidPrettyPrint()
	me = os.path.basename( sys.argv[0] )
	if len(sys.argv) == 1:
		bpp._process()
	else:
		for arg in sys.argv[1:]:
			if arg == '-':
				bpp._process()
			else:
				bpp.do_name( arg )
	bpp.finish()
	exit(0)
